{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermecanechia/Desktop/omens-front/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts } from './api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Estado para controlar a visibilidade do formulário\n  const [isListVisible, setIsListVisible] = useState(false); // Estado para controlar a visibilidade da lista de produtos\n  const [isEditVisible, setIsEditVisible] = useState(false); // Estado para controlar a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null); // Estado para armazenar o produto a ser editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = () => {\n    console.log('Product saved, fetching updated product list...');\n    fetchProducts(); // Recarrega a lista de produtos após a criação ou atualização\n    setIsFormVisible(false); // Fecha o formulário após salvar\n    setIsEditVisible(false); // Fecha o formulário de edição\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = productId => {\n    const product = products.find(p => p.id === productId); // Busca o produto que será editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsEditVisible(true); // Exibe o formulário de edição\n    setIsListVisible(false); // Esconde a lista de produtos\n  };\n  useEffect(() => {\n    fetchProducts(); // Carrega a lista de produtos ao montar o componente\n  }, []); // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !isFormVisible && !isListVisible && !isEditVisible && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault(); // Impede qualquer navegação desnecessária\n          setIsFormVisible(true); // Exibe o formulário de criação\n        },\n        children: \"Create a new product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          setIsListVisible(true); // Exibe a lista de produtos\n        },\n        children: \"List of products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          setIsListVisible(true); // Exibe a lista de produtos para edição\n        },\n        children: \"Edit a product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), (isListVisible || isEditVisible) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsListVisible(false); // Oculta a lista de produtos\n        setIsEditVisible(false); // Oculta o formulário de edição\n      },\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(ProductForm, {\n      onProductSaved: handleProductSaved,\n      onCancel: () => setIsFormVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), isListVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products,\n        onEditProduct: handleEditProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), isEditVisible && productToEdit && /*#__PURE__*/_jsxDEV(ProductForm, {\n      productId: productToEdit.id,\n      initialProduct: productToEdit,\n      onProductSaved: handleProductSaved,\n      onCancel: () => {\n        setIsEditVisible(false); // Fecha o formulário de edição\n        setIsListVisible(true); // Volta para a lista de produtos\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qkZ3/vM2hzNPoXzsEa3lUB0sd9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","ProductForm","getProducts","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","products","setProducts","isFormVisible","setIsFormVisible","isListVisible","setIsListVisible","isEditVisible","setIsEditVisible","productToEdit","setProductToEdit","fetchProducts","response","error","console","handleProductSaved","log","handleEditProduct","productId","product","find","p","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","preventDefault","style","marginTop","onProductSaved","onCancel","onEditProduct","initialProduct","_c","$RefreshReg$"],"sources":["/Users/guilhermecanechia/Desktop/omens-front/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts } from './api';\n\nfunction App() {\n  const [products, setProducts] = useState([]);  // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Estado para controlar a visibilidade do formulário\n  const [isListVisible, setIsListVisible] = useState(false); // Estado para controlar a visibilidade da lista de produtos\n  const [isEditVisible, setIsEditVisible] = useState(false); // Estado para controlar a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null);  // Estado para armazenar o produto a ser editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts();  // Chama a API para pegar a lista de produtos\n      setProducts(response);  // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = () => {\n    console.log('Product saved, fetching updated product list...');\n    fetchProducts(); // Recarrega a lista de produtos após a criação ou atualização\n    setIsFormVisible(false); // Fecha o formulário após salvar\n    setIsEditVisible(false); // Fecha o formulário de edição\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = (productId) => {\n    const product = products.find(p => p.id === productId); // Busca o produto que será editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsEditVisible(true); // Exibe o formulário de edição\n    setIsListVisible(false); // Esconde a lista de produtos\n  };\n\n  useEffect(() => {\n    fetchProducts();  // Carrega a lista de produtos ao montar o componente\n  }, []);  // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return (\n    <div>\n      <h1>Omens</h1>\n\n      {/* Link \"Create a new product\", aparece quando o formulário não está visível */}\n      {!isFormVisible && !isListVisible && !isEditVisible && (\n        <>\n          <button\n            onClick={(e) => {\n              e.preventDefault(); // Impede qualquer navegação desnecessária\n              setIsFormVisible(true); // Exibe o formulário de criação\n            }}\n          >\n            Create a new product\n          </button>\n\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              setIsListVisible(true);  // Exibe a lista de produtos\n            }}\n          >\n            List of products\n          </button>\n\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              setIsListVisible(true);  // Exibe a lista de produtos para edição\n            }}\n          >\n            Edit a product\n          </button>\n        </>\n      )}\n\n      {/* Link \"Back to Home\" - Aparece na lista de produtos ou no formulário de edição */}\n      {(isListVisible || isEditVisible) && (\n        <button\n          onClick={() => {\n            setIsListVisible(false); // Oculta a lista de produtos\n            setIsEditVisible(false); // Oculta o formulário de edição\n          }}\n          style={{ marginTop: '10px' }}\n        >\n          Back to Home\n        </button>\n      )}\n\n      {/* Formulário de criação de produto */}\n      {isFormVisible && (\n        <ProductForm onProductSaved={handleProductSaved} onCancel={() => setIsFormVisible(false)} />\n      )}\n\n      {/* Lista de produtos */}\n      {isListVisible && (\n        <div>\n          <ProductList products={products} onEditProduct={handleEditProduct} />\n        </div>\n      )}\n\n      {/* Formulário de edição de produto */}\n      {isEditVisible && productToEdit && (\n        <ProductForm\n          productId={productToEdit.id}\n          initialProduct={productToEdit}\n          onProductSaved={handleProductSaved}\n          onCancel={() => {\n            setIsEditVisible(false); // Fecha o formulário de edição\n            setIsListVisible(true);  // Volta para a lista de produtos\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}