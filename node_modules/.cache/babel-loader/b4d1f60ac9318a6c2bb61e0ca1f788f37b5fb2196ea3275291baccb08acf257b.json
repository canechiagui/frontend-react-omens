{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermecanechia/Desktop/omens-front/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts, updateProduct } from './api'; // Adicionando updateProduct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Estado para controlar a visibilidade do formulário de criação\n  const [isEditVisible, setIsEditVisible] = useState(false); // Estado para controlar a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null); // Estado para armazenar o produto a ser editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = () => {\n    fetchProducts(); // Recarrega a lista de produtos após a criação ou atualização\n    setIsFormVisible(false); // Fecha o formulário após salvar\n    setIsEditVisible(false); // Fecha o formulário de edição\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = productId => {\n    const product = products.find(p => p.id === productId); // Busca o produto que será editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsEditVisible(true); // Exibe o formulário de edição\n  };\n  useEffect(() => {\n    fetchProducts(); // Carrega a lista de produtos ao montar o componente\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), !isFormVisible && !isEditVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsFormVisible(true),\n      children: \"Create a new product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), !isFormVisible && !isEditVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products,\n        onEditProduct: handleEditProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(ProductForm, {\n      onProductSaved: handleProductSaved,\n      onCancel: () => setIsFormVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), isEditVisible && productToEdit && /*#__PURE__*/_jsxDEV(ProductForm, {\n      productId: productToEdit.id,\n      initialProduct: productToEdit,\n      onProductSaved: handleProductSaved,\n      onCancel: () => setIsEditVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NTakELzJIKl0ysAfrrieFXy6NXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","ProductForm","getProducts","updateProduct","jsxDEV","_jsxDEV","App","_s","products","setProducts","isFormVisible","setIsFormVisible","isEditVisible","setIsEditVisible","productToEdit","setProductToEdit","fetchProducts","response","error","console","handleProductSaved","handleEditProduct","productId","product","find","p","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEditProduct","onProductSaved","onCancel","initialProduct","_c","$RefreshReg$"],"sources":["/Users/guilhermecanechia/Desktop/omens-front/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts, updateProduct } from './api'; // Adicionando updateProduct\n\nfunction App() {\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Estado para controlar a visibilidade do formulário de criação\n  const [isEditVisible, setIsEditVisible] = useState(false); // Estado para controlar a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null); // Estado para armazenar o produto a ser editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = () => {\n    fetchProducts(); // Recarrega a lista de produtos após a criação ou atualização\n    setIsFormVisible(false); // Fecha o formulário após salvar\n    setIsEditVisible(false); // Fecha o formulário de edição\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = (productId) => {\n    const product = products.find(p => p.id === productId); // Busca o produto que será editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsEditVisible(true); // Exibe o formulário de edição\n  };\n\n  useEffect(() => {\n    fetchProducts(); // Carrega a lista de produtos ao montar o componente\n  }, []);\n\n  return (\n    <div>\n      <h1>Product Management</h1>\n\n      {/* Se estiver no formulário de criação, exibe o botão \"Criar Novo Produto\" */}\n      {!isFormVisible && !isEditVisible && (\n        <button onClick={() => setIsFormVisible(true)}>Create a new product</button>\n      )}\n\n      {/* Exibe a lista de produtos */}\n      {!isFormVisible && !isEditVisible && (\n        <div>\n          <h2>List of Products</h2>\n          <ProductList products={products} onEditProduct={handleEditProduct} />\n        </div>\n      )}\n\n      {/* Formulário de criação de produto */}\n      {isFormVisible && (\n        <ProductForm onProductSaved={handleProductSaved} onCancel={() => setIsFormVisible(false)} />\n      )}\n\n      {/* Formulário de edição de produto */}\n      {isEditVisible && productToEdit && (\n        <ProductForm\n          productId={productToEdit.id}\n          initialProduct={productToEdit}\n          onProductSaved={handleProductSaved}\n          onCancel={() => setIsEditVisible(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}