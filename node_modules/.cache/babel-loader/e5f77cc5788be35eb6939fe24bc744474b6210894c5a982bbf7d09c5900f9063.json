{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermecanechia/Desktop/omens-front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts, createProduct, updateProduct } from './api'; // Importando funções necessárias\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Controla a visibilidade do formulário de criação\n  const [isEditVisible, setIsEditVisible] = useState(false); // Controla a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null); // Armazena o produto a ser editado\n  const [isListVisible, setIsListVisible] = useState(false); // Controla a visibilidade da lista de produtos\n  const [isEditListVisible, setIsEditListVisible] = useState(false); // Controla a visibilidade da lista de edição de produtos\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um produto é salvo ou editado\n  const handleProductSaved = async (productData, productId) => {\n    try {\n      if (productId) {\n        // Se o ID do produto estiver presente, chama a função de atualização\n        await updateProduct(productId, productData);\n      } else {\n        // Se não houver ID, cria um novo produto\n        await createProduct(productData);\n      }\n      fetchProducts(); // Recarrega a lista de produtos\n      setIsFormVisible(false); // Fecha o formulário após salvar\n      setIsEditVisible(false); // Fecha o formulário de edição\n    } catch (error) {\n      console.error('Error saving product:', error);\n    }\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = productId => {\n    const product = products.find(p => p.id === productId); // Encontra o produto que será editado\n    setProductToEdit(product); // Armazena o produto para edição\n    setIsEditVisible(true); // Exibe o formulário de edição\n    setIsEditListVisible(false); // Esconde a lista de edição de produtos\n  };\n\n  // Função para mostrar a lista de produtos\n  const showProductList = () => {\n    setIsListVisible(true); // Exibe a lista de produtos\n    setIsFormVisible(false); // Esconde o formulário de criação\n    setIsEditVisible(false); // Esconde o formulário de edição\n    setIsEditListVisible(false); // Esconde a lista de edição\n  };\n\n  // Função para mostrar a lista de produtos para edição\n  const showEditProductList = () => {\n    setIsEditListVisible(true); // Exibe a lista de produtos para edição\n    setIsFormVisible(false); // Esconde o formulário de criação\n    setIsEditVisible(false); // Esconde o formulário de edição\n    setIsListVisible(false); // Esconde a lista de produtos\n  };\n\n  // Função para esconder a lista de produtos\n  const hideProductList = () => {\n    setIsListVisible(false); // Esconde a lista de produtos\n  };\n  useEffect(() => {\n    fetchProducts(); // Carrega os produtos ao montar o componente\n  }, []); // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omens Product Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !isFormVisible && !isEditVisible && !isListVisible && !isEditListVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsFormVisible(true),\n        children: \"Create a new product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showProductList,\n        children: \"List of Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showEditProductList,\n        children: \"Edit a product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(ProductForm, {\n      onProductSaved: handleProductSaved // Passa a função de salvar para o formulário\n      ,\n      onCancel: () => setIsFormVisible(false) // Função de cancelar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), isEditVisible && productToEdit && /*#__PURE__*/_jsxDEV(ProductForm, {\n      productId: productToEdit.id // Passa o ID do produto para edição\n      ,\n      initialProduct: productToEdit // Passa os dados do produto para o formulário de edição\n      ,\n      onProductSaved: handleProductSaved // Função para salvar as alterações\n      ,\n      onCancel: () => setIsEditVisible(false) // Função de cancelar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), isListVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products // Passa os produtos para o componente de lista\n        ,\n        onEditProduct: handleEditProduct // Função para editar produtos\n        ,\n        onBackToHome: hideProductList // Função para esconder a lista e voltar ao início\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), isEditListVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a product to edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products // Passa os produtos para o componente de lista\n        ,\n        onEditProduct: handleEditProduct // Função para editar produtos\n        ,\n        onBackToHome: () => setIsEditListVisible(false) // Função para esconder a lista de edição\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nrTMPlpLNIDrMxBqn+qKTbxD7ss=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","ProductForm","getProducts","createProduct","updateProduct","jsxDEV","_jsxDEV","App","_s","products","setProducts","isFormVisible","setIsFormVisible","isEditVisible","setIsEditVisible","productToEdit","setProductToEdit","isListVisible","setIsListVisible","isEditListVisible","setIsEditListVisible","fetchProducts","response","error","console","handleProductSaved","productData","productId","handleEditProduct","product","find","p","id","showProductList","showEditProductList","hideProductList","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onProductSaved","onCancel","initialProduct","onEditProduct","onBackToHome","_c","$RefreshReg$"],"sources":["/Users/guilhermecanechia/Desktop/omens-front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts, createProduct, updateProduct } from './api'; // Importando funções necessárias\n\nfunction App() {\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Controla a visibilidade do formulário de criação\n  const [isEditVisible, setIsEditVisible] = useState(false); // Controla a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null); // Armazena o produto a ser editado\n  const [isListVisible, setIsListVisible] = useState(false); // Controla a visibilidade da lista de produtos\n  const [isEditListVisible, setIsEditListVisible] = useState(false); // Controla a visibilidade da lista de edição de produtos\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um produto é salvo ou editado\n  const handleProductSaved = async (productData, productId) => {\n    try {\n      if (productId) {\n        // Se o ID do produto estiver presente, chama a função de atualização\n        await updateProduct(productId, productData);\n      } else {\n        // Se não houver ID, cria um novo produto\n        await createProduct(productData);\n      }\n      fetchProducts(); // Recarrega a lista de produtos\n      setIsFormVisible(false); // Fecha o formulário após salvar\n      setIsEditVisible(false); // Fecha o formulário de edição\n    } catch (error) {\n      console.error('Error saving product:', error);\n    }\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = (productId) => {\n    const product = products.find(p => p.id === productId); // Encontra o produto que será editado\n    setProductToEdit(product); // Armazena o produto para edição\n    setIsEditVisible(true); // Exibe o formulário de edição\n    setIsEditListVisible(false); // Esconde a lista de edição de produtos\n  };\n\n  // Função para mostrar a lista de produtos\n  const showProductList = () => {\n    setIsListVisible(true); // Exibe a lista de produtos\n    setIsFormVisible(false); // Esconde o formulário de criação\n    setIsEditVisible(false); // Esconde o formulário de edição\n    setIsEditListVisible(false); // Esconde a lista de edição\n  };\n\n  // Função para mostrar a lista de produtos para edição\n  const showEditProductList = () => {\n    setIsEditListVisible(true); // Exibe a lista de produtos para edição\n    setIsFormVisible(false); // Esconde o formulário de criação\n    setIsEditVisible(false); // Esconde o formulário de edição\n    setIsListVisible(false); // Esconde a lista de produtos\n  };\n\n  // Função para esconder a lista de produtos\n  const hideProductList = () => {\n    setIsListVisible(false); // Esconde a lista de produtos\n  };\n\n  useEffect(() => {\n    fetchProducts(); // Carrega os produtos ao montar o componente\n  }, []); // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return (\n    <div>\n      <h1>Omens Product Management</h1>\n\n      {/* Botões de navegação */}\n      {!isFormVisible && !isEditVisible && !isListVisible && !isEditListVisible && (\n        <div>\n          <button onClick={() => setIsFormVisible(true)}>Create a new product</button>\n          <button onClick={showProductList}>List of Products</button>\n          <button onClick={showEditProductList}>Edit a product</button>\n        </div>\n      )}\n\n      {/* Exibe o formulário de criação de produto */}\n      {isFormVisible && (\n        <ProductForm\n          onProductSaved={handleProductSaved} // Passa a função de salvar para o formulário\n          onCancel={() => setIsFormVisible(false)} // Função de cancelar\n        />\n      )}\n\n      {/* Exibe o formulário de edição de produto */}\n      {isEditVisible && productToEdit && (\n        <ProductForm\n          productId={productToEdit.id} // Passa o ID do produto para edição\n          initialProduct={productToEdit} // Passa os dados do produto para o formulário de edição\n          onProductSaved={handleProductSaved} // Função para salvar as alterações\n          onCancel={() => setIsEditVisible(false)} // Função de cancelar\n        />\n      )}\n\n      {/* Exibe a lista de produtos se 'isListVisible' for verdadeiro */}\n      {isListVisible && (\n        <div>\n          <h2>List of Products</h2>\n          <ProductList\n            products={products} // Passa os produtos para o componente de lista\n            onEditProduct={handleEditProduct} // Função para editar produtos\n            onBackToHome={hideProductList} // Função para esconder a lista e voltar ao início\n          />\n        </div>\n      )}\n\n      {/* Exibe a lista de produtos para edição */}\n      {isEditListVisible && (\n        <div>\n          <h2>Select a product to edit</h2>\n          <ProductList\n            products={products} // Passa os produtos para o componente de lista\n            onEditProduct={handleEditProduct} // Função para editar produtos\n            onBackToHome={() => setIsEditListVisible(false)} // Função para esconder a lista de edição\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}