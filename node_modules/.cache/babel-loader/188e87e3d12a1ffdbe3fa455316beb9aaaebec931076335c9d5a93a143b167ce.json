{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermecanechia/Desktop/omens-front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts, createProduct, updateProduct } from './api'; // Certifique-se de importar todas as funções necessárias\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Estado para controlar a visibilidade do formulário\n  const [isEditVisible, setIsEditVisible] = useState(false); // Estado para controlar a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null); // Estado para armazenar o produto a ser editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = async (productData, productId) => {\n    try {\n      if (productId) {\n        // Se há um productId, chama a função de atualização\n        await updateProduct(productId, productData);\n      } else {\n        // Caso contrário, chama a função de criação de produto\n        await createProduct(productData);\n      }\n      fetchProducts(); // Recarrega a lista de produtos após salvar ou editar\n      setIsFormVisible(false); // Fecha o formulário após salvar\n      setIsEditVisible(false); // Fecha o formulário de edição\n    } catch (error) {\n      console.error('Error saving product:', error);\n    }\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = productId => {\n    const product = products.find(p => p.id === productId); // Busca o produto que será editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsEditVisible(true); // Exibe o formulário de edição\n    setIsFormVisible(false); // Oculta o formulário de criação\n  };\n  useEffect(() => {\n    fetchProducts(); // Carrega a lista de produtos ao montar o componente\n  }, []); // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omens Product Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isFormVisible && !isEditVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsFormVisible(true),\n        children: \"Create a new product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditVisible(false),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditVisible(true),\n        children: \"Edit a product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(ProductForm, {\n      onProductSaved: handleProductSaved // Passa a função de salvar para o formulário\n      ,\n      onCancel: () => setIsFormVisible(false) // Função de cancelar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), isEditVisible && productToEdit && /*#__PURE__*/_jsxDEV(ProductForm, {\n      productId: productToEdit.id // Passa o ID do produto para edição\n      ,\n      initialProduct: productToEdit // Passa os dados iniciais do produto\n      ,\n      onProductSaved: handleProductSaved // Função para salvar as alterações\n      ,\n      onCancel: () => setIsEditVisible(false) // Função de cancelar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), !isFormVisible && !isEditVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products // Passa os produtos para o componente de lista\n        ,\n        onEditProduct: handleEditProduct // Passa a função de editar para cada produto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NTakELzJIKl0ysAfrrieFXy6NXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","ProductForm","getProducts","createProduct","updateProduct","jsxDEV","_jsxDEV","App","_s","products","setProducts","isFormVisible","setIsFormVisible","isEditVisible","setIsEditVisible","productToEdit","setProductToEdit","fetchProducts","response","error","console","handleProductSaved","productData","productId","handleEditProduct","product","find","p","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onProductSaved","onCancel","initialProduct","onEditProduct","_c","$RefreshReg$"],"sources":["/Users/guilhermecanechia/Desktop/omens-front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts, createProduct, updateProduct } from './api'; // Certifique-se de importar todas as funções necessárias\n\nfunction App() {\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Estado para controlar a visibilidade do formulário\n  const [isEditVisible, setIsEditVisible] = useState(false); // Estado para controlar a visibilidade do formulário de edição\n  const [productToEdit, setProductToEdit] = useState(null); // Estado para armazenar o produto a ser editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = async (productData, productId) => {\n    try {\n      if (productId) {\n        // Se há um productId, chama a função de atualização\n        await updateProduct(productId, productData);\n      } else {\n        // Caso contrário, chama a função de criação de produto\n        await createProduct(productData);\n      }\n      fetchProducts(); // Recarrega a lista de produtos após salvar ou editar\n      setIsFormVisible(false); // Fecha o formulário após salvar\n      setIsEditVisible(false); // Fecha o formulário de edição\n    } catch (error) {\n      console.error('Error saving product:', error);\n    }\n  };\n\n  // Função para iniciar a edição de um produto\n  const handleEditProduct = (productId) => {\n    const product = products.find(p => p.id === productId); // Busca o produto que será editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsEditVisible(true); // Exibe o formulário de edição\n    setIsFormVisible(false); // Oculta o formulário de criação\n  };\n\n  useEffect(() => {\n    fetchProducts(); // Carrega a lista de produtos ao montar o componente\n  }, []); // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return (\n    <div>\n      <h1>Omens Product Management</h1>\n\n      {/* Botões de navegação */}\n      {!isFormVisible && !isEditVisible && (\n        <div>\n          <button onClick={() => setIsFormVisible(true)}>Create a new product</button>\n          <button onClick={() => setIsEditVisible(false)}>Back to Home</button>\n          <button onClick={() => setIsEditVisible(true)}>Edit a product</button>\n        </div>\n      )}\n\n      {/* Exibe o formulário de criação de produto */}\n      {isFormVisible && (\n        <ProductForm\n          onProductSaved={handleProductSaved} // Passa a função de salvar para o formulário\n          onCancel={() => setIsFormVisible(false)} // Função de cancelar\n        />\n      )}\n\n      {/* Exibe o formulário de edição de produto */}\n      {isEditVisible && productToEdit && (\n        <ProductForm\n          productId={productToEdit.id} // Passa o ID do produto para edição\n          initialProduct={productToEdit} // Passa os dados iniciais do produto\n          onProductSaved={handleProductSaved} // Função para salvar as alterações\n          onCancel={() => setIsEditVisible(false)} // Função de cancelar\n        />\n      )}\n\n      {/* Lista de produtos */}\n      {!isFormVisible && !isEditVisible && (\n        <div>\n          <h2>List of Products</h2>\n          <ProductList\n            products={products} // Passa os produtos para o componente de lista\n            onEditProduct={handleEditProduct} // Passa a função de editar para cada produto\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}