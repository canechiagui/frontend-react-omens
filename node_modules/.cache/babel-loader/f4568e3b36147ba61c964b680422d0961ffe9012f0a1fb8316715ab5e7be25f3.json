{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermecanechia/Desktop/omens-front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts } from './api'; // Importando a função de busca de produtos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Controla a visibilidade do formulário de criação\n  const [isListVisible, setIsListVisible] = useState(false); // Controla a visibilidade da lista de produtos\n  const [productToEdit, setProductToEdit] = useState(null); // Armazena o produto que será editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = () => {\n    console.log('Product saved, fetching updated product list...');\n    fetchProducts(); // Recarrega a lista de produtos após a criação ou atualização\n    setIsFormVisible(false); // Fecha o formulário após salvar\n  };\n\n  // Função chamada quando um produto é selecionado para edição\n  const handleEditProduct = productId => {\n    const product = products.find(p => p.id === productId); // Encontra o produto a ser editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsFormVisible(true); // Exibe o formulário de edição\n    setIsListVisible(false); // Oculta a lista de produtos\n  };\n\n  // UseEffect para buscar os produtos quando o componente for montado\n  useEffect(() => {\n    fetchProducts(); // Carrega a lista de produtos ao montar o componente\n  }, []); // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), !isListVisible && !isFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsFormVisible(true),\n        children: \"Create a new product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsListVisible(true),\n        children: \"List of products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(ProductForm, {\n      product: productToEdit // Passa o produto a ser editado para o formulário\n      ,\n      onProductSaved: handleProductSaved,\n      onCancel: () => {\n        setIsFormVisible(false);\n        setIsListVisible(false);\n      } // Volta para a tela anterior\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), isListVisible && !isFormVisible && /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products,\n      onEditProduct: handleEditProduct // Função para editar produto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PB/ObQKoU0evTrhI5d+AObDQvtY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","ProductForm","getProducts","jsxDEV","_jsxDEV","App","_s","products","setProducts","isFormVisible","setIsFormVisible","isListVisible","setIsListVisible","productToEdit","setProductToEdit","fetchProducts","response","error","console","handleProductSaved","log","handleEditProduct","productId","product","find","p","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onProductSaved","onCancel","onEditProduct","_c","$RefreshReg$"],"sources":["/Users/guilhermecanechia/Desktop/omens-front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProductList from './components/ProductList';\nimport ProductForm from './components/ProductForm';\nimport { getProducts } from './api'; // Importando a função de busca de produtos\n\nfunction App() {\n  const [products, setProducts] = useState([]); // Estado para armazenar os produtos\n  const [isFormVisible, setIsFormVisible] = useState(false); // Controla a visibilidade do formulário de criação\n  const [isListVisible, setIsListVisible] = useState(false); // Controla a visibilidade da lista de produtos\n  const [productToEdit, setProductToEdit] = useState(null); // Armazena o produto que será editado\n\n  // Função para buscar os produtos da API\n  const fetchProducts = async () => {\n    try {\n      const response = await getProducts(); // Chama a API para pegar a lista de produtos\n      setProducts(response); // Atualiza o estado com a nova lista de produtos\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Função chamada quando um novo produto é salvo ou editado\n  const handleProductSaved = () => {\n    console.log('Product saved, fetching updated product list...');\n    fetchProducts(); // Recarrega a lista de produtos após a criação ou atualização\n    setIsFormVisible(false); // Fecha o formulário após salvar\n  };\n\n  // Função chamada quando um produto é selecionado para edição\n  const handleEditProduct = (productId) => {\n    const product = products.find(p => p.id === productId); // Encontra o produto a ser editado\n    setProductToEdit(product); // Define o produto a ser editado\n    setIsFormVisible(true); // Exibe o formulário de edição\n    setIsListVisible(false); // Oculta a lista de produtos\n  };\n\n  // UseEffect para buscar os produtos quando o componente for montado\n  useEffect(() => {\n    fetchProducts(); // Carrega a lista de produtos ao montar o componente\n  }, []); // O array vazio [] garante que a requisição será feita apenas uma vez\n\n  return (\n    <div>\n      <h1>Omens</h1>\n\n      {/* Botões \"Create\" e \"List\" */}\n      {!isListVisible && !isFormVisible && (\n        <div>\n          <button onClick={() => setIsFormVisible(true)}>Create a new product</button>\n          <button onClick={() => setIsListVisible(true)}>List of products</button>\n        </div>\n      )}\n\n      {/* Formulário de criação ou edição */}\n      {isFormVisible && (\n        <ProductForm\n          product={productToEdit} // Passa o produto a ser editado para o formulário\n          onProductSaved={handleProductSaved}\n          onCancel={() => {\n            setIsFormVisible(false);\n            setIsListVisible(false);\n          }} // Volta para a tela anterior\n        />\n      )}\n\n      {/* Lista de produtos */}\n      {isListVisible && !isFormVisible && (\n        <ProductList\n          products={products}\n          onEditProduct={handleEditProduct} // Função para editar produto\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}